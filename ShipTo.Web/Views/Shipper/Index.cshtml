@model IEnumerable<ShipTo.Core.Entities.Shipper>

@{
    ViewData["Title"] = "شركات الشحن";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>شركات الشحن</h2>*@

<p>
    <a onclick="setModelAddUpdate('form_AddUpdate_Shipper', 0, GetSearchURL(), false, 'tbl_Items', 'شركة شحن')" class="btn btn-success" data-toggle="modal" data-target="#Modal_AddUpdate_Shipper"> <i class="fa fa-fw fa-plus"></i> إضافة جديد </a>
</p>


<div class="table-responsive">
    @* <table id="tbl_Items" class="table table-bordered table-hover table-striped">
            <thead>
                <tr>
                    <th style="visibility:hidden">
                        @Html.DisplayNameFor(model => model.ID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Phone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CreatedDate)
                    </th>
                    <th>

                    </th>
                </tr>

            </thead>
            <tbody>

                @foreach (var item in Model)
                {
                    <tr class="active">
                        <td>
                            @Html.DisplayFor(modelItem => item.ID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Phone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ID"> <i class="fa fa-fw fa-edit"></i> تعديل</a> |
                            <a asp-action="Delete" asp-route-id="@item.ID"> <i class="fa fa-fw fa-trash-o"></i> حذف </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>

            </tfoot>
        </table>*@

    <table id="tbl_Items" class="table table-bordered table-hover table-striped">
        <thead>
            <tr>
                <th >
                    @Html.DisplayNameFor(model => model.ID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th class="notExportCol">

                </th>
            </tr>

        </thead>
    </table>

</div>

<partial name="../Shipper/_AddUpdate.cshtml" model="new Core.Entities.Shipper()" />
<partial name="../Common/_DeleteConfirmation" />

<script>


     function GetSearchURL() {
         var GetURL = '@Url.Action("GetAll", "Shipper")';
        return GetURL;
    }

   var DeleteURL = '@Url.Action("Delete", "Shipper")';

    var Columns = [{ data: "id", visible: false },
                    { data: "name" },
                    { data: "phone" },
                    { data: "address" },
                    { data: "email" },
                    { data: "createdDate", render: function (data) {
                         return moment(data, 'YYYY-MM-DD HH:mm:ss').format('DD/MM/YYYY')
                    } },
                    {
             searchable: false, search: false,
                        render: function (data, type, row) {
                            return '<a  data-toggle="modal" data-target="#Modal_AddUpdate_Shipper" onclick="FillFormAddUpdate(' + row.id + ',\'' + GetSearchURL() + '\',\'' + false + '\',\'' + 'tbl_Items' + '\',\'' + 'شركة شحن'  + '\')"> <i class="fa fa-fw fa-edit"></i> تعديل</a> | <a data-toggle="modal" data-target="#Modal_DeleteConfirmation" onclick="setModelDelete( \'' + DeleteURL + '\' , ' + row.id + ',\'' + GetSearchURL() + '\')" > <i class="fa fa-fw fa-trash-o"></i> حذف </a>'
                        }
                    },
                ]

    $(document).ready(function () {
        AddDataTable('tbl_Items', '@Url.Action("GetAll", "Shipper")', Columns)

    });


     

    function FillFormAddUpdate(elementId, ReloadActionURL, IsUsedExternal, ControlId, EntityName) {
        var URL = '@Url.Action("GetById", "Shipper")?Id=' + elementId
        $.ajax({
            type: "Get",
            url: URL,
            success: function (fillFormAddUpdateResponse) {
                setModelAddUpdate('form_AddUpdate_Shipper', fillFormAddUpdateResponse.id, ReloadActionURL, IsUsedExternal, ControlId, EntityName);
                document.getElementById("Id").value = fillFormAddUpdateResponse.id;
                document.getElementById("Name").value = fillFormAddUpdateResponse.name;
                document.getElementById("Phone").value = fillFormAddUpdateResponse.phone;
                document.getElementById("Address").value = fillFormAddUpdateResponse.address;
                document.getElementById("Email").value = fillFormAddUpdateResponse.email;
                document.getElementById("Notes").value = fillFormAddUpdateResponse.notes;
            },
            error: function (error) {
                toastr.error("حدث خطأ أثناء إرسال البيانات");
            }
        });
    }


</script>
